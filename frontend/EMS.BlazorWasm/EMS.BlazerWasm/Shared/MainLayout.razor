@inherits LayoutComponentBase
@inject EMS.BlazorWasm.Services.ILocalStorage LocalStorage

<CascadingValue Value="this">

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
			<div style="width:70px;text-align:right;">
				@if (loggedIn)
				{
					<a class="btn btn-sm btn-primary text-white" title="Account" href="account"><span class="oi oi-key"></span></a>
					<button class="btn btn-sm btn-danger" title="Logout" @onclick="Logout"><span class="oi oi-account-logout"></span></button>
				}
				else
				{
					<button class="btn btn-sm btn-success" title="Login" @onclick="OpenLogin"><span class="oi oi-account-login"></span></button>
				}
			</div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

</CascadingValue>

<div class="modal-backdrop fade @(show ? "show" : "") @(display ? "d-block" : "d-none")"></div>

<div class="modal fade @(show ? "show" : "")  @(display ? "d-block" : "d-none")" tabindex="-1" role="dialog">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Login Form</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="mb-3">
					<label for="loginEmail" class="form-label">Email</label>
					<input type="email" class="form-control" id="loginEmail" placeholder="name@example.com" autocomplete="off" required @bind-value="user" />
				</div>
				<div class="mb-3">
					<label for="loginPassword" class="form-label">Password</label>
					<input type="password" class="form-control" id="loginPassword" autocomplete="off" required @bind-value="loginPassword"/>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-success" @onclick="Login">Login</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Close</button>
			</div>
		</div>
	</div>
</div>


@code {

	@using EMS.BlazorWasm.Client.Services

    [Inject]
    public IUserService UserService { get; set; }

    private bool show, display, loggedIn;
    private string? user;
    private string? loginPassword;

    public bool isLoggedIn() { return loggedIn; }

    public string? GetUserName()
    {
        return loggedIn ? user : null;
    }

    public async Task OpenLogin()
    {
        display = true;
        await Task.Delay(100);
        show = true;
    }

    public async Task Logout()
    {
        user = null;
        loginPassword = null;
        loggedIn = false;
    }

    private async Task Close()
    {
        show = false;
        await Task.Delay(500);
        display = false;
    }

    private async Task Login()
    {
        if (!string.IsNullOrEmpty(user))
        {
            await Close();
            var model = new LoginModel() {
                Username = user,
                Password = loginPassword
            };
            var resp = await UserService.LoginAsync(model);
            loggedIn = true;

            loginPassword = string.Empty;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        user = await LocalStorage.GetStringAsync("user");
        loginPassword = string.Empty;
        loggedIn = !string.IsNullOrEmpty(user);
    }
}

